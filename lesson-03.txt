# list - списки
l=list(range(10))
l
[1,2,3,4,5,6,7,8,9]

# tuple - кортежи
t1=(1, 1.5, True, 'string', (1,2,3))
print(t1[3])
t2=(546)

# set - множества
s1={1,1,2,2,3,3}

# dict - словари
d1={
	'id':1,
	'name':'Linus',
	'is_developer':True
	'skills':('C++','Linux'),
	'adress':{
	}
}
print(d1['id'])	#=>1
print(d1['name'])	#=>Linus
print(d1['adres']['street'])
d1['any']=123

# Как определить тип данных переменной?
print(type(d1))

# Как выполнить явное приведение переменной к типу?
i='666'
i=int(i)
print(i, type(i)) #666, int


# Типы данных бывают изменямые и неизменяемые
"""
immtubale	(незименяемые):
-bool, int, float, str, comlex, byes, tuple
mutable		(изменяемые):
-list, dict, set, object
"""


# Какие операторы существуют в Python?
"""
Арифметические: + - * / % **(возведение в степень), //(деление без остатка)
Сравнения:	== != <>(не равно) > < >= <=
Присваивания:	= += -= *= %= **= //=
Логические:	and or not
Побитовые:	& | ~ << >>
Принадлежности:	in
		not in
Тождественности: is
		 not is
"""

# Таблица истинности:
x	y	and	or	not(x)	xor(^n) #только побитовая
0	0	0	0	1	1
0	1	0	1	1	0
1	0	0	1	0	0
1	1	1	1	0	1

# Ветвление
"""
a=1
b=2
if a<b:
    print('a<b')
elif a==b:
    print('a=b')
elif a is b:
    pass # пустой блок кода
else:
    print('a>b')
"""

# Терминальный оператор
if True:
    username='Вася'
else:
    username='Петя'
username='Вася' if True else 'Петя'

# Циклы
i=10

while i:
    if i%2:
	continue # Пропускает текущую итерацию (осуждается)
        ptint(i)
    if i == 10:
	break # Мгновенное завершение цикла
(всё что пустое - это false)

for 

"""
# Функции для работы со списками и методы списков
len()		 -   длина списка
l.append(e)	 -   добавить элемент в конец списка
insert(index,e)  -   добавить элемент в указанную позицию
"""

lst=list(range(10)
print('Длина списка:', len(l))
lst.append(10)
lst.insert)1000,-1)
print(lst)

s=''

for c in range(ord('a'), ord('z')+1):
    s.append(chr(c))

print (''.join(s)) ',' - разделитель

(посмотреть методы списка)
(index, insert, pop) (Сделать развертку)

int(input())

# Домашнее задание:

if __name__ == "__main__"

